{"remainingRequest":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/babel-loader/lib/index.js!/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kangcheng/Documents/dev/marijuana-legalization/src/components/Comments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/src/components/Comments.vue","mtime":1543013118736},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from 'firebase';\nimport Comment from './Comment.vue';\nimport ReplyBox from './ReplyBox.vue';\nimport { getComments } from '../data';\nimport emitter from '../emitter';\nexport default {\n  name: 'comments',\n  components: {\n    Comment: Comment,\n    ReplyBox: ReplyBox\n  },\n  props: ['user', 'savedData'],\n  data: function data() {\n    var _this = this;\n\n    var _this$user = this.user,\n        nickname = _this$user.nickname,\n        id = _this$user.id;\n    var comments = getComments();\n\n    if (this.savedData.replies) {\n      Object.keys(this.savedData.replies).forEach(function (replyId) {\n        var reply = _this.savedData.replies[replyId];\n\n        if (!reply.commentId && !reply.replyId) {\n          var content = Object.values(reply.content)[Object.values(reply.content).length - 1];\n          comments.push({\n            content: content,\n            id: replyId,\n            nickname: nickname,\n            uid: id,\n            like: 0,\n            dislike: 0,\n            type: 0,\n            byCurrentUser: true\n          });\n        }\n      });\n    }\n\n    return {\n      comments: comments\n    };\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    emitter.on('post', function (_ref) {\n      var commentId = _ref.commentId,\n          replyId = _ref.replyId,\n          comment = _ref.comment;\n\n      if (commentId === undefined && replyId === undefined) {\n        var ref = \"\".concat(_this2.user.id, \"/replies/\");\n        var newKey = firebase.database().ref(ref).push().key;\n        firebase.database().ref(ref + newKey).set({\n          content: _defineProperty({}, firebase.database().ref().child(ref).push().key, comment.content)\n        }).then(function () {\n          _this2.comments.push(_objectSpread({}, comment, {\n            id: newKey\n          }));\n\n          var scrollingElement = document.scrollingElement || document.body;\n          scrollingElement.scrollTo({\n            top: scrollingElement.scrollHeight,\n            behavior: \"smooth\"\n          });\n        });\n      }\n    });\n  }\n};",{"version":3,"sources":["Comments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAgBA,OAAA,QAAA,MAAA,UAAA;AACA,OAAA,OAAA,MAAA,eAAA;AACA,OAAA,QAAA,MAAA,gBAAA;AACA,SAAA,WAAA,QAAA,SAAA;AACA,OAAA,OAAA,MAAA,YAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA,OADA;AAEA,IAAA,QAAA,EAAA;AAFA,GAFA;AAMA,EAAA,KAAA,EAAA,CAAA,MAAA,EAAA,WAAA,CANA;AAOA,EAAA,IAPA,kBAOA;AAAA;;AAAA,qBACA,KAAA,IADA;AAAA,QACA,QADA,cACA,QADA;AAAA,QACA,EADA,cACA,EADA;AAGA,QAAA,QAAA,GAAA,WAAA,EAAA;;AAEA,QAAA,KAAA,SAAA,CAAA,OAAA,EAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,KAAA,SAAA,CAAA,OAAA,EAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,YAAA,KAAA,GAAA,KAAA,CAAA,SAAA,CAAA,OAAA,CAAA,OAAA,CAAA;;AACA,YAAA,CAAA,KAAA,CAAA,SAAA,IAAA,CAAA,KAAA,CAAA,OAAA,EAAA;AACA,cAAA,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,OAAA,EAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,OAAA,EAAA,MAAA,GAAA,CAAA,CAAA;AAEA,UAAA,QAAA,CAAA,IAAA,CAAA;AACA,YAAA,OAAA,EAAA,OADA;AAEA,YAAA,EAAA,EAAA,OAFA;AAGA,YAAA,QAAA,EAAA,QAHA;AAIA,YAAA,GAAA,EAAA,EAJA;AAKA,YAAA,IAAA,EAAA,CALA;AAMA,YAAA,OAAA,EAAA,CANA;AAOA,YAAA,IAAA,EAAA,CAPA;AAQA,YAAA,aAAA,EAAA;AARA,WAAA;AAUA;AACA,OAhBA;AAiBA;;AAEA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GAnCA;AAoCA,EAAA,OApCA,qBAoCA;AAAA;;AACA,IAAA,OAAA,CAAA,EAAA,CAAA,MAAA,EAAA,gBAAA;AAAA,UAAA,SAAA,QAAA,SAAA;AAAA,UAAA,OAAA,QAAA,OAAA;AAAA,UAAA,OAAA,QAAA,OAAA;;AACA,UAAA,SAAA,KAAA,SAAA,IAAA,OAAA,KAAA,SAAA,EAAA;AACA,YAAA,GAAA,aAAA,MAAA,CAAA,IAAA,CAAA,EAAA,cAAA;AACA,YAAA,MAAA,GAAA,QAAA,CAAA,QAAA,GAAA,GAAA,CAAA,GAAA,EAAA,IAAA,GAAA,GAAA;AACA,QAAA,QAAA,CAAA,QAAA,GAAA,GAAA,CAAA,GAAA,GAAA,MAAA,EAAA,GAAA,CAAA;AACA,UAAA,OAAA,sBACA,QAAA,CAAA,QAAA,GAAA,GAAA,GAAA,KAAA,CAAA,GAAA,EAAA,IAAA,GAAA,GADA,EACA,OAAA,CAAA,OADA;AADA,SAAA,EAIA,IAJA,CAIA,YAAA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,IAAA,mBACA,OADA;AAEA,YAAA,EAAA,EAAA;AAFA;;AAIA,cAAA,gBAAA,GAAA,QAAA,CAAA,gBAAA,IAAA,QAAA,CAAA,IAAA;AACA,UAAA,gBAAA,CAAA,QAAA,CAAA;AACA,YAAA,GAAA,EAAA,gBAAA,CAAA,YADA;AAEA,YAAA,QAAA,EAAA;AAFA,WAAA;AAIA,SAdA;AAeA;AACA,KApBA;AAqBA;AA1DA,CAAA","sourcesContent":["<template>\n  <section class=\"comments\">\n    <ReplyBox :user=\"user\" :main=\"true\"/>\n    <Comment v-for=\"(comment, index) in comments\" :key=\"comment.id\" :comment=\"comment\" :user=\"user\" :saved-data=\"savedData\"/>\n  </section>\n</template>\n\n<style scoped>\n.comments {\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n}\n</style>\n\n<script>\nimport firebase from 'firebase'\nimport Comment from './Comment.vue'\nimport ReplyBox from './ReplyBox.vue'\nimport { getComments } from '../data'\nimport emitter from '../emitter'\n\nexport default {\n  name: 'comments',\n  components: {\n    Comment,\n    ReplyBox,\n  },\n  props: ['user', 'savedData'],\n  data() {\n    const { nickname, id } = this.user\n\n    const comments = getComments()\n\n    if (this.savedData.replies) {\n      Object.keys(this.savedData.replies).forEach((replyId) => {\n        const reply = this.savedData.replies[replyId]\n        if (!reply.commentId && !reply.replyId) {\n          const content = Object.values(reply.content)[Object.values(reply.content).length - 1];\n\n          comments.push({\n            content,\n            id: replyId,\n            nickname,\n            uid: id,\n            like: 0,\n            dislike: 0,\n            type: 0,\n            byCurrentUser: true,\n          })\n        }\n      })\n    }\n\n    return {\n      comments,\n    }\n  },\n  mounted() {\n    emitter.on('post', ({ commentId, replyId, comment }) => {\n      if (commentId === undefined && replyId === undefined) {\n        const ref = `${this.user.id}/replies/`\n        const newKey = firebase.database().ref(ref).push().key\n        firebase.database().ref(ref + newKey).set({\n          content: {\n            [firebase.database().ref().child(ref).push().key]: comment.content,\n          },\n        }).then(() => {\n          this.comments.push({\n            ...comment,\n            id: newKey,\n          })\n          const scrollingElement = (document.scrollingElement || document.body)\n          scrollingElement.scrollTo({\n            top: scrollingElement.scrollHeight,\n            behavior: \"smooth\"\n          })\n        })\n      }\n    })\n  },\n}\n</script>\n"],"sourceRoot":"src/components"}]}