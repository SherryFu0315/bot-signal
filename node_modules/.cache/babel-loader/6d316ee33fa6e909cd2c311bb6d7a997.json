{"remainingRequest":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/thread-loader/dist/cjs.js!/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/babel-loader/lib/index.js!/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/eslint-loader/index.js??ref--13-0!/Users/kangcheng/Documents/dev/marijuana-legalization/src/data.js","dependencies":[{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/src/data.js","mtime":1542999527671},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport Papa from 'papaparse';\nvar list = [{\n  hasFlag: false,\n  type: 0\n}, {\n  type: 1,\n  key: 'V/Acc/HU'\n}, {\n  type: 1,\n  key: 'V/Acc/LU'\n}, {\n  type: 1,\n  key: 'V/Inacc/HU'\n}, {\n  type: 1,\n  key: 'V/Inacc/LU'\n}, {\n  type: 2,\n  key: 'IV/Acc/HU'\n}, {\n  type: 2,\n  key: 'IV/Acc/LU'\n}, {\n  type: 2,\n  key: 'IV/Inacc/HU'\n}, {\n  type: 2,\n  key: 'IV/Inacc/LU'\n}];\n\nvar getQueryVariable = function getQueryVariable(variable) {\n  var query = window.location.hash.substring(window.location.hash.indexOf('?') + 1);\n  var vars = query.split('&');\n\n  for (var i = 0; i < vars.length; i++) {\n    var pair = vars[i].split('=');\n\n    if (decodeURIComponent(pair[0]) == variable) {\n      return decodeURIComponent(pair[1]);\n    }\n  }\n\n  return '';\n};\n\nvar comments = [];\nvar replies = {};\nexport default (function () {\n  return new Promise(function (resolve) {\n    var which = parseInt(atob(getQueryVariable('id')), 10);\n    var c = list[which];\n    var isCommentsLoaded = false;\n    var isRepliesLoaded = false;\n\n    var finished = function finished() {\n      if (isCommentsLoaded && isRepliesLoaded) {\n        return resolve(which);\n      }\n\n      return;\n    };\n\n    fetch('static/comments.csv').then(function (response) {\n      return response.text();\n    }).then(function (text) {\n      Papa.parse(text, {\n        header: true\n      }).data.forEach(function (item) {\n        var comment_text = item.comment_text,\n            down_count = item.down_count,\n            up_count = item.up_count,\n            message_id = item.message_id,\n            nickname = item.nickname,\n            user_id = item.user_id;\n        comments.push({\n          content: comment_text,\n          like: up_count,\n          dislike: down_count,\n          id: message_id,\n          nickname: nickname,\n          uid: user_id,\n          type: c.type,\n          flagInfo: c.type !== 0 ? item[c.key] || undefined : undefined\n        });\n      });\n      isCommentsLoaded = true;\n      finished();\n    });\n    fetch('static/replies.csv').then(function (response) {\n      return response.text();\n    }).then(function (text) {\n      Papa.parse(text, {\n        header: true\n      }).data.forEach(function (_ref) {\n        var reply_text = _ref.reply_text,\n            message_id_default = _ref.message_id_default,\n            reply_id = _ref.reply_id,\n            reply_nickname = _ref.reply_nickname,\n            reply_down_count = _ref.reply_down_count,\n            reply_up_count = _ref.reply_up_count,\n            reply_uid = _ref.reply_uid;\n        var reply = {\n          content: reply_text,\n          like: reply_up_count,\n          dislike: reply_down_count,\n          id: reply_id,\n          nickname: reply_nickname,\n          uid: reply_uid,\n          parentId: message_id_default\n        };\n\n        if (replies[message_id_default]) {\n          replies[message_id_default].push(reply);\n        } else {\n          replies[message_id_default] = [reply];\n        }\n      });\n      isRepliesLoaded = true;\n      finished();\n    });\n  });\n});\nexport var getComments = function getComments() {\n  return comments;\n};\nexport var getReplies = function getReplies(commentId) {\n  return replies[commentId] || [];\n};",{"version":3,"sources":["/Users/kangcheng/Documents/dev/marijuana-legalization/src/data.js"],"names":["Papa","list","hasFlag","type","key","getQueryVariable","variable","query","window","location","hash","substring","indexOf","vars","split","i","length","pair","decodeURIComponent","comments","replies","Promise","resolve","which","parseInt","atob","c","isCommentsLoaded","isRepliesLoaded","finished","fetch","then","response","text","parse","header","data","forEach","item","comment_text","down_count","up_count","message_id","nickname","user_id","push","content","like","dislike","id","uid","flagInfo","undefined","reply_text","message_id_default","reply_id","reply_nickname","reply_down_count","reply_up_count","reply_uid","reply","parentId","getComments","getReplies","commentId"],"mappings":"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","sourcesContent":["import Papa from 'papaparse'\n\nconst list = [\n  {\n    hasFlag: false,\n    type: 0,\n  },\n  {\n    type: 1,\n    key: 'V/Acc/HU',\n  },\n  {\n    type: 1,\n    key: 'V/Acc/LU',\n  },\n  {\n    type: 1,\n    key: 'V/Inacc/HU',\n  },\n  {\n    type: 1,\n    key: 'V/Inacc/LU',\n  },\n  {\n    type: 2,\n    key: 'IV/Acc/HU',\n  },\n  {\n    type: 2,\n    key: 'IV/Acc/LU',\n  },\n  {\n    type: 2,\n    key: 'IV/Inacc/HU',\n  },\n  {\n    type: 2,\n    key: 'IV/Inacc/LU',\n  },\n]\n\nconst getQueryVariable = (variable) => {\n  const query = window.location.hash.substring(window.location.hash.indexOf('?') + 1);\n  const vars = query.split('&');\n  for (var i = 0; i < vars.length; i++) {\n    const pair = vars[i].split('=');\n    if (decodeURIComponent(pair[0]) == variable) {\n      return decodeURIComponent(pair[1]);\n    }\n  }\n  return ''\n}\n\nconst comments = []\nconst replies = {}\n\nexport default () => new Promise((resolve) => {\n  const which = parseInt(atob(getQueryVariable('id')), 10)\n  const c = list[which]\n\n  let isCommentsLoaded = false\n  let isRepliesLoaded = false\n  const finished = () => {\n    if (isCommentsLoaded && isRepliesLoaded) {\n      return resolve(which)\n    }\n    return\n  }\n\n  fetch('static/comments.csv')\n    .then((response) => {\n      return response.text()\n    })\n    .then((text) => {\n      Papa.parse(text, { header: true }).data\n        .forEach((item) => {\n          const { comment_text, down_count, up_count, message_id, nickname, user_id } = item\n          comments.push({\n            content: comment_text,\n            like: up_count,\n            dislike: down_count,\n            id: message_id,\n            nickname,\n            uid: user_id,\n\n            type: c.type,\n            flagInfo: c.type !== 0 ? (item[c.key] || undefined) : undefined,\n          })\n        })\n      isCommentsLoaded = true\n      finished()\n    })\n  \n  fetch('static/replies.csv')\n    .then((response) => {\n      return response.text()\n    })\n    .then((text) => {\n      Papa.parse(text, { header: true }).data.forEach(({ reply_text, message_id_default, reply_id, reply_nickname, reply_down_count, reply_up_count, reply_uid, }) => {\n        const reply = {\n          content: reply_text,\n          like: reply_up_count,\n          dislike: reply_down_count,\n          id: reply_id,\n          nickname: reply_nickname,\n          uid: reply_uid,\n\n          parentId: message_id_default,\n        }\n\n        if (replies[message_id_default]) {\n          replies[message_id_default].push(reply)\n        } else {\n          replies[message_id_default] = [reply]\n        }\n      })\n      isRepliesLoaded = true\n      finished()\n    })\n})\n\nexport const getComments = () => comments\nexport const getReplies = (commentId) => replies[commentId] || []\n"]}]}