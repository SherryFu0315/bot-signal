{"remainingRequest":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/thread-loader/dist/cjs.js!/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/babel-loader/lib/index.js!/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kangcheng/Documents/dev/marijuana-legalization/src/components/Comment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/src/components/Comment.vue","mtime":1543013749959},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _MessageBox2 from \"element-ui/lib/theme-chalk/message-box.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _MessageBox from \"element-ui/lib/message-box\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from 'firebase';\nimport ReplyBox from './ReplyBox.vue';\nimport { getReplies } from '../data';\nimport emitter from '../emitter';\nexport default {\n  name: 'comment',\n  components: {\n    ReplyBox: ReplyBox\n  },\n  props: ['comment', 'parentComment', 'user', 'savedData'],\n  data: function data() {\n    var _this = this;\n\n    var _this$user = this.user,\n        nickname = _this$user.nickname,\n        id = _this$user.id;\n    var isReply = !!this.parentComment;\n    var replies = getReplies(this.comment.id);\n    var like = undefined;\n    var attitude = undefined;\n    var reported = undefined;\n\n    if (this.savedData.reactions) {\n      if (!isReply) {\n        var found = this.savedData.reactions[this.comment.id];\n\n        if (found) {\n          like = found.like;\n          attitude = found.attitude;\n          reported = found.reported;\n        }\n      } else {\n        var _found = this.savedData.reactions[this.parentComment.id] && this.savedData.reactions[this.parentComment.id].replies[this.comment.id];\n\n        if (_found) {\n          like = _found.like;\n          attitude = _found.attitude;\n          reported = _found.reported;\n        }\n      }\n    }\n\n    if (this.savedData.replies) {\n      Object.keys(this.savedData.replies).forEach(function (replyId) {\n        var reply = _this.savedData.replies[replyId];\n\n        if (!isReply && reply.commentId === _this.comment.id) {\n          var content = Object.values(reply.content)[Object.values(reply.content).length - 1];\n          replies.push({\n            content: content,\n            id: replyId,\n            nickname: nickname,\n            uid: id,\n            like: 0,\n            dislike: 0,\n            type: 0,\n            byCurrentUser: true\n          });\n        }\n      });\n    }\n\n    return {\n      isReportEnabled: true,\n      isShowingReplies: false,\n      isShowingReplyBox: false,\n      isShowingEditBox: false,\n      editedContent: this.comment.content,\n      editingContent: '',\n      replies: replies,\n      reported: reported,\n      // reported as abuse?\n      attitude: attitude,\n      // confirm or unflag\n      like: like // like or dislike\n\n    };\n  },\n  computed: {\n    isReply: function isReply() {\n      return !!this.parentComment;\n    },\n    hasReplies: function hasReplies() {\n      return this.replies.length > 0;\n    },\n    imageURL: function imageURL() {\n      return \"http://tinygraphs.com/squares/\".concat(this.comment.uid, \"?theme=frogideas&numcolors=2\");\n    },\n    repliesCount: function repliesCount() {\n      return this.replies.length;\n    },\n    whom: function whom() {\n      return this.comment.type === 0 ? '' : this.comment.type === 1 ? 'bot' : 'community';\n    },\n    flagInfoDisplay: function flagInfoDisplay() {\n      return this.attitude === undefined ? this.comment.flagInfo : this.attitude === false ? \"Reported to the \".concat(this.whom, \": You unflagged this message\") : \"Agree with the \".concat(this.whom, \": the post is abusive\");\n    },\n    reportInfoDisplay: function reportInfoDisplay() {\n      return this.reported ? 'Reported: this is abusive' : 'Report abusive';\n    },\n    likeCount: function likeCount() {\n      return parseInt(this.comment.like, 10) + (this.like === true ? 1 : 0);\n    },\n    dislikeCount: function dislikeCount() {\n      return parseInt(this.comment.dislike, 10) + (this.like === false ? 1 : 0);\n    }\n  },\n  methods: {\n    reactionsRef: function reactionsRef(endpoint) {\n      return (this.isReply ? \"\".concat(this.user.id, \"/reactions/\").concat(this.parentComment.id, \"/replies/\").concat(this.comment.id, \"/\") : \"\".concat(this.user.id, \"/reactions/\").concat(this.comment.id, \"/\")) + endpoint;\n    },\n    report: function report() {\n      _MessageBox.alert(\"Thank you for your help. Your reporting action has been reported\".concat(this.whom ? \"to the \".concat(this.whom) : '', \".\"), undefined, {\n        showConfirmButton: false,\n        closeOnClickModal: true\n      });\n\n      firebase.database().ref(this.reactionsRef('reported')).set(true);\n      this.reported = true;\n    },\n    confirm: function confirm() {\n      firebase.database().ref(this.reactionsRef('attitude')).set(true);\n      this.attitude = true;\n    },\n    unflag: function unflag() {\n      _MessageBox.alert(\"Thank you for your help. Your unflagging action has been reported\".concat(this.whom ? \"to the \".concat(this.whom) : '', \".\"), undefined, {\n        showConfirmButton: false,\n        closeOnClickModal: true\n      });\n\n      firebase.database().ref(this.reactionsRef('attitude')).set(false);\n      this.attitude = false;\n    },\n    change: function change() {\n      if (this.attitude !== undefined) {\n        firebase.database().ref(this.reactionsRef('attitude')).set(null);\n        this.attitude = undefined;\n      }\n\n      if (this.reported !== undefined) {\n        firebase.database().ref(this.reactionsRef('reported')).set(null);\n        this.reported = undefined;\n      }\n    },\n    voteLike: function voteLike() {\n      this.like = this.like === true ? undefined : true;\n      firebase.database().ref(this.reactionsRef('like')).set(this.like);\n    },\n    voteDislike: function voteDislike() {\n      this.like = this.like === false ? undefined : false;\n      firebase.database().ref(this.reactionsRef('like')).set(this.like);\n    },\n    toggleReplies: function toggleReplies() {\n      this.isShowingReplies = !this.isShowingReplies;\n      firebase.database().ref(this.reactionsRef('viewReplies')).push(new Date().toGMTString());\n    },\n    toggleReplyBox: function toggleReplyBox() {\n      this.isShowingReplyBox = !this.isShowingReplyBox;\n    },\n    foldReplyBox: function foldReplyBox() {\n      this.isShowingReplyBox = false;\n    },\n    showEditBox: function showEditBox() {\n      this.isShowingEditBox = true;\n      this.editingContent = this.editedContent;\n    },\n    edit: function edit() {\n      firebase.database().ref(\"\".concat(this.user.id, \"/replies/\").concat(this.comment.id, \"/content\")).push(this.editedContent);\n      this.editedContent = this.editingContent;\n      this.isShowingEditBox = false;\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    emitter.on('post', function (_ref) {\n      var commentId = _ref.commentId,\n          replyId = _ref.replyId,\n          comment = _ref.comment;\n\n      if (commentId === _this2.comment.id) {\n        var ref = \"\".concat(_this2.user.id, \"/replies/\");\n        var data = {\n          commentId: commentId,\n          content: _defineProperty({}, firebase.database().ref().child(ref).push().key, comment.content)\n        };\n\n        if (replyId) {\n          data.replyId = replyId;\n        }\n\n        var newKey = firebase.database().ref(ref).push().key;\n        firebase.database().ref(ref + newKey).set(data).then(function () {\n          _this2.replies.push(_objectSpread({}, comment, {\n            id: newKey\n          }));\n\n          _this2.isShowingReplies = true;\n\n          _this2.$nextTick(function () {\n            var scrollingElement = document.scrollingElement || document.body;\n            scrollingElement.scrollTo({\n              top: _this2.$refs.self.offsetTop + _this2.$refs.self.offsetHeight,\n              behavior: \"smooth\"\n            });\n          });\n        });\n      }\n    });\n  }\n};",{"version":3,"sources":["Comment.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"comment\" ref=\"self\" :class=\"{ reply: isReply }\">\n    <div class=\"comment__main\">\n      <img class=\"comment__main_avatar\" :src=\"imageURL\" />\n      <div class=\"comment__main__body\">\n        <div class=\"comment___main__body__nickname__report\">\n          <div class=\"comment__main__body__nickname\">{{comment.nickname}}</div>\n          <div v-if=\"isReportEnabled && !comment.byCurrentUser\" class=\"comment___main__body__report\">\n            <div class=\"comment___main__body__report__info\">\n              <template v-if=\"!comment.flagInfo\">\n                <template v-if=\"reported === true\">\n                  <img src=\"../assets/flag.png\">\n                  {{reportInfoDisplay}}\n                </template>\n              </template>\n              <template v-else>\n                <img src=\"../assets/flag.png\" v-show=\"attitude !== false\">\n                {{flagInfoDisplay}}\n                <el-popover\n                  placement=\"top-end\"\n                  width=\"300\"\n                  trigger=\"hover\"\n                  :offset=\"-100\"\n                  v-show=\"attitude === undefined && reported === undefined\">\n                  <img slot=\"reference\" class=\"help\" src=\"../assets/help.png\">\n                  <p><strong>The moderation decision is made based on our comment policy.</strong></p>\n                  <ul>\n                    <li>Don't make false statements, defame, or impersonate someone else.</li>\n                    <li>Don't copy and post others' material, trademarks, or intellectual property.</li>\n                    <li>Comments shouldn't harass, abuse, or threaten anyone's personal safety or property.</li>\n                    <li>Don't post profanity, obscenities, abusive language, or otherwise objectionable content.</li>\n                  </ul>\n                </el-popover>\n              </template>\n            </div>\n            <template v-if=\"comment.flagInfo\">\n              <div class=\"button danger\" v-show=\"attitude === undefined\" @click=\"confirm\">Confirm</div>\n              <div class=\"button danger\" v-show=\"attitude === undefined\" @click=\"unflag\">Unflag</div>\n            </template>\n            <template v-else>\n              <div v-if=\"reported === undefined\" class=\"button\" @click=\"report\">\n                <img src=\"../assets/flag-outline.png\">\n                {{reportInfoDisplay}}\n              </div>\n            </template>\n            <div class=\"button\" v-show=\"attitude !== undefined || reported !== undefined\" @click=\"change\">Change</div>\n          </div>\n          <div v-if=\"comment.byCurrentUser\" class=\"button\" @click=\"showEditBox\">Edit</div>\n        </div>\n        <div class=\"comment__main__body__content\">{{editedContent}}</div>\n        <div class=\"comment__main__body__buttons\" v-if=\"!comment.byCurrentUser\">\n          <div class=\"button\" :class=\"{ active: isShowingReplyBox }\" @click=\"toggleReplyBox\">Reply</div>\n          <div class=\"button\" v-if=\"!isReply\" :disabled=\"!hasReplies\" @click=\"toggleReplies\" :class=\"{ active: isShowingReplies }\">Replies ({{repliesCount}})</div>\n          <div class=\"button\" @click=\"voteLike\"><img :class=\"{ active: like === true }\" src=\"../assets/like.png\"> ({{likeCount}})</div>\n          <div class=\"button\" @click=\"voteDislike\"><img :class=\"{ active: like === false }\" src=\"../assets/dislike.png\" > ({{dislikeCount}})</div>\n        </div>\n      </div>\n    </div>\n    <ReplyBox :user=\"user\" :comment=\"comment\" :parent-comment=\"parentComment\" v-show=\"isShowingReplyBox\" :fold=\"foldReplyBox\"/>\n    <div v-if=\"!isReply && hasReplies && isShowingReplies\" class=\"comment__replies\">\n      <comment v-for=\"reply in replies\" :key=\"reply.id\" :comment=\"reply\" :parent-comment=\"comment\" :is-reply=\"true\" :user=\"user\" :saved-data=\"savedData\"/>\n    </div>\n\n    <el-dialog title=\"Edit\" :visible=\"isShowingEditBox\" center :show-close=\"false\">\n      <el-form>\n        <el-form-item label=\"Comment\">\n          <el-input type=\"textarea\" v-model=\"editingContent\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"edit\">Submit</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport firebase from 'firebase'\nimport { MessageBox } from 'element-ui'\nimport ReplyBox from './ReplyBox.vue'\nimport { getReplies } from '../data'\nimport emitter from '../emitter'\n\nexport default {\n  name: 'comment',\n  components: {\n    ReplyBox,\n  },\n  props: ['comment', 'parentComment', 'user', 'savedData'],\n  data() {\n    const { nickname, id } = this.user\n    const isReply = !!this.parentComment \n\n    let replies = getReplies(this.comment.id);\n    let like = undefined\n    let attitude = undefined\n    let reported = undefined\n\n    if (this.savedData.reactions) {\n      if (!isReply) {\n        const found = this.savedData.reactions[this.comment.id]\n        if (found) {\n          like = found.like\n          attitude = found.attitude\n          reported = found.reported\n        }\n      } else {\n        const found = this.savedData.reactions[this.parentComment.id] && this.savedData.reactions[this.parentComment.id].replies[this.comment.id]\n        if (found) {\n          like = found.like\n          attitude = found.attitude\n          reported = found.reported\n        }\n      }\n    }\n\n    if (this.savedData.replies) {\n      Object.keys(this.savedData.replies).forEach((replyId) => {\n        const reply = this.savedData.replies[replyId]\n        if (!isReply && reply.commentId === this.comment.id) {\n          const content = Object.values(reply.content)[Object.values(reply.content).length - 1];\n\n          replies.push({\n            content,\n            id: replyId,\n            nickname,\n            uid: id,\n            like: 0,\n            dislike: 0,\n            type: 0,\n            byCurrentUser: true,\n          })\n        }\n      })\n    }\n\n    return {\n      isReportEnabled: true,\n      isShowingReplies: false,\n      isShowingReplyBox: false,\n      isShowingEditBox: false,\n      editedContent: this.comment.content,\n      editingContent: '',\n      replies,\n      reported, // reported as abuse?\n      attitude, // confirm or unflag\n      like, // like or dislike\n    }\n  },\n  computed: {\n    isReply() {\n      return !!this.parentComment\n    },\n    hasReplies() {\n      return this.replies.length > 0\n    },\n    imageURL() {\n      return `http://tinygraphs.com/squares/${this.comment.uid}?theme=frogideas&numcolors=2`\n    },\n    repliesCount() {\n      return this.replies.length\n    },\n    whom() {\n      return this.comment.type === 0 ?  '' : this.comment.type === 1 ? 'bot' : 'community'\n    },\n    flagInfoDisplay() {\n      return this.attitude === undefined ? this.comment.flagInfo : this.attitude === false ? `Reported to the ${this.whom}: You unflagged this message` : `Agree with the ${this.whom}: the post is abusive`\n    },\n    reportInfoDisplay() {\n      return this.reported ? 'Reported: this is abusive' : 'Report abusive'\n    },\n    likeCount() {\n      return parseInt(this.comment.like, 10) + (this.like === true ? 1 : 0)\n    },\n    dislikeCount() {\n      return parseInt(this.comment.dislike, 10) + (this.like === false ? 1 : 0)\n    },\n  },\n  methods: {\n    reactionsRef(endpoint) {\n      return (this.isReply ? `${this.user.id}/reactions/${this.parentComment.id}/replies/${this.comment.id}/` : `${this.user.id}/reactions/${this.comment.id}/`) + endpoint\n    },\n    report() {\n      MessageBox.alert(`Thank you for your help. Your reporting action has been reported${this.whom ? `to the ${this.whom}` : ''}.`, undefined, {\n        showConfirmButton: false,\n        closeOnClickModal: true,\n      });\n      firebase.database().ref(this.reactionsRef('reported')).set(true)\n      this.reported = true;\n    },\n    confirm() {\n      firebase.database().ref(this.reactionsRef('attitude')).set(true)\n      this.attitude = true;\n    },\n    unflag() {\n      MessageBox.alert(`Thank you for your help. Your unflagging action has been reported${this.whom ? `to the ${this.whom}` : ''}.`, undefined, {\n        showConfirmButton: false,\n        closeOnClickModal: true,\n      });\n      firebase.database().ref(this.reactionsRef('attitude')).set(false)\n      this.attitude = false;\n    },\n    change() {\n      if (this.attitude !== undefined) {\n        firebase.database().ref(this.reactionsRef('attitude')).set(null)\n        this.attitude = undefined;\n      }\n      if (this.reported !== undefined) {\n        firebase.database().ref(this.reactionsRef('reported')).set(null)\n        this.reported = undefined;\n      }\n    },\n    voteLike() {\n      this.like = this.like === true ? undefined : true;\n      firebase.database().ref(this.reactionsRef('like')).set(this.like)\n    },\n    voteDislike() {\n      this.like = this.like === false ? undefined : false;\n      firebase.database().ref(this.reactionsRef('like')).set(this.like)\n    },\n    toggleReplies() {\n      this.isShowingReplies = !this.isShowingReplies\n      firebase.database().ref(this.reactionsRef('viewReplies')).push((new Date()).toGMTString())\n    },\n    toggleReplyBox() {\n      this.isShowingReplyBox = !this.isShowingReplyBox\n    },\n    foldReplyBox() {\n      this.isShowingReplyBox = false\n    },\n    showEditBox() {\n      this.isShowingEditBox = true\n      this.editingContent = this.editedContent\n    },\n    edit() {\n      firebase.database().ref(`${this.user.id}/replies/${this.comment.id}/content`).push(this.editedContent)\n      this.editedContent = this.editingContent\n      this.isShowingEditBox = false\n    },\n  },\n  mounted() {\n    emitter.on('post', ({ commentId, replyId, comment }) => {\n      if (commentId === this.comment.id) {\n        const ref = `${this.user.id}/replies/`\n        const data = {\n          commentId,\n          content: {\n            [firebase.database().ref().child(ref).push().key]: comment.content,\n          },\n        }\n        if (replyId) {\n          data.replyId = replyId\n        }\n        const newKey = firebase.database().ref(ref).push().key\n        firebase.database().ref(ref + newKey).set(data).then(() => {\n          this.replies.push({\n            ...comment,\n            id: newKey,\n          })\n          this.isShowingReplies = true\n          this.$nextTick(() => {\n            const scrollingElement = (document.scrollingElement || document.body)\n            scrollingElement.scrollTo({\n              top: this.$refs.self.offsetTop + this.$refs.self.offsetHeight,\n              behavior: \"smooth\"\n            })\n          })\n        })\n      }\n    })\n  },\n}\n</script>\n\n<style scoped>\n.button {\n  display: flex;\n  flex-direction: row;\n\n  cursor: pointer;\n\n  height: 100%;\n  color: #606266;\n  font-size: 12px;\n  margin-right: 12px;\n}\n.button:disabled {\n  cursor: not-allowed;\n}\n.button:hover, .button.active {\n  color: #409eff;\n}\n.button > img {\n  width: 13px;\n  height: 13px;\n  margin-right: 4px;\n  filter: grayscale(10);\n}\n.button > img.active {\n  filter: unset;\n}\n.button.danger {\n  color: #BD1515;\n  text-decoration: underline;\n}\n.comment {\n  display: flex;\n  flex-direction: column;\n  margin: 8px 0;\n}\n.comment__main {\n  display: flex;\n  flex-direction: row;\n}\n.comment__main_avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 20px;\n}\n.reply .comment__main_avatar {\n  width: 30px;\n  height: 30px;\n  border-radius: 15px;\n}\n.comment__main__body {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n\n  margin-left: 16px;\n}\n.comment___main__body__nickname__report {\n  display: flex;\n  flex-direction: row;\n}\n.comment__main__body__nickname {\n  color: #188fff;\n  font-size: 16px;\n  flex: 1;\n}\n.comment___main__body__report {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  font-size: 12px;\n}\n.comment___main__body__report__info {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  margin-right: 12px;\n  color: #BD1515;\n}\n.comment___main__body__report__info img {\n  width: 13px;\n  height: 13px;\n}\n.comment___main__body__report__info .help {\n  width: 12px;\n  height: 12px;\n\n  margin-left: 3px;\n  margin-top: -5px;\n}\n.comment__main__body__content {\n  margin-top: 8px;\n  font-size: 14px;\n  line-height: 1.4;\n}\n.comment__main__body__buttons {\n  display: flex;\n  flex-direction: row;\n\n  margin: 8px 0;\n}\n.comment__replies {\n  margin-left: 56px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}