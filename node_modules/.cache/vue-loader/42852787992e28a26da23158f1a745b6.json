{"remainingRequest":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kangcheng/Documents/dev/marijuana-legalization/src/components/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/src/components/Login.vue","mtime":1543002128016},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kangcheng/Documents/dev/marijuana-legalization/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'login',\n  props: ['saveUserinfo'],\n  data() {\n    return {\n      form: {\n        nickname: '',\n        password: '',\n      },\n      rules: {\n        nickname: [\n          { required: true, message: 'Please input nickname', trigger: 'blur' },\n          { min: 3, message: 'Invalid nickname', trigger: 'blur' },\n        ],\n        password: [\n          { required: true, message: 'Please input password', trigger: 'blur' },\n          { min: 3, message: 'Invalid password', trigger: 'blur' },\n        ],\n      }\n    }\n  },\n  methods: {\n    submit() {\n      this.$refs['form'].validate((valid) => {\n        if (valid) {\n          this.saveUserinfo(this.form.nickname, this.form.password)\n        } else {\n          return false\n        }\n      });\n    },\n  },\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["\n\n<template>\n  <el-dialog title=\"Login\" visible center>\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"form\">\n      <el-form-item label=\"nickname\" prop=\"nickname\">\n        <el-input v-model=\"form.nickname\" autocomplete=\"off\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"password\" prop=\"password\">\n        <el-input type=\"password\" v-model=\"form.password\" autocomplete=\"off\"></el-input>\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button type=\"primary\" @click=\"submit\">Submit</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nexport default {\n  name: 'login',\n  props: ['saveUserinfo'],\n  data() {\n    return {\n      form: {\n        nickname: '',\n        password: '',\n      },\n      rules: {\n        nickname: [\n          { required: true, message: 'Please input nickname', trigger: 'blur' },\n          { min: 3, message: 'Invalid nickname', trigger: 'blur' },\n        ],\n        password: [\n          { required: true, message: 'Please input password', trigger: 'blur' },\n          { min: 3, message: 'Invalid password', trigger: 'blur' },\n        ],\n      }\n    }\n  },\n  methods: {\n    submit() {\n      this.$refs['form'].validate((valid) => {\n        if (valid) {\n          this.saveUserinfo(this.form.nickname, this.form.password)\n        } else {\n          return false\n        }\n      });\n    },\n  },\n}\n</script>\n\n<style scoped>\n.statement {\n  padding: 12px 24px;\n  border-radius: 8px;\n  background-color: #e6f7ff;\n}\n</style>\n"]}]}